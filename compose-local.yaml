version: '3.4'
services:
  app:
    container_name: ESS
    build:
      context: .
      dockerfile: Dockerfile-local
      args:
        - userid=${USER_ID}
        - groupid=${GROUP_ID}
    env_file:
      - .env.local
    restart: unless-stopped
    ports:
      - ${PUBLIC_PORT}:${APP_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/app
      - storage:/app/storage
    depends_on:
      - redis
      - mariadb
    networks:
      - mariadb-network
      - redis-network

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    env_file:
      - .env.local
    restart: unless-stopped
    ports:
      - ${ADMINER_PUBLIC_PORT}:8080
    depends_on:
      - mariadb
    networks:
      - mariadb-network

  mariadb:
    container_name: mariadb
    image: mariadb:10.11.2
    env_file:
      - .env.local
    volumes:
      - mariadb-data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    networks:
      - mariadb-network

  redis:
    container_name: redis
    image: redis:6.0.16
    env_file:
      - .env.local
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - redis-network

volumes:
  storage:
  mariadb-data:
  redis-data:

networks:
  mariadb-network:
    driver: bridge
  redis-network:
    driver: bridge
